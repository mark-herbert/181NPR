
import java.awt.AWTException;
import java.awt.Image;
import java.awt.MenuItem;
import java.awt.SystemTray;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.rmi.NotBoundException;
import java.rmi.RemoteException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Kenneth
 */
public class NPRServerUI extends javax.swing.JFrame {

    /**
     * Creates new form NPRServerUI
     */
    private final String server_name = "1N8P1R";
    private NPRImpl remote;
    private Registry registry;
    private SystemTray tray;
    private TrayIcon trayIcon;
    private MenuItem popOpen;
    private MenuItem popClose;
    private BufferedImage buff;
    private int trayIconWidth;
    
    public NPRServerUI() {
//        runWamp();
        initComponents();
//        try {
//            Thread.sleep(5000);
//        } catch (InterruptedException ex) {
//            Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
//        }
        try {
            remote = new NPRImpl(textField);
            registry = LocateRegistry.createRegistry(1099);
        } catch (RemoteException ex) {
//            Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
            textField.setText(ex.getMessage());
        }
        if(SystemTray.isSupported()){
            tray = SystemTray.getSystemTray();
            try {
                buff = ImageIO.read(getClass().getResource("/ServerLogo2.png"));
                trayIconWidth = new TrayIcon(buff).getSize().width;
            } catch (IOException ex) {
//                Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
                textField.setText(ex.getMessage());
            }
            ActionListener listener = new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent ae) {
                    if(ae.getSource().equals(popOpen)){
                        openFrame();
                    }
                    if(ae.getSource().equals(popClose)){
                        closeProgram();
                    }
                    if(ae.getSource().equals(trayIcon)){
                        openFrame();
                    }
                }
            };
            popOpen = new MenuItem("Open");
            popClose = new MenuItem("Close");
            popOpen.addActionListener(listener);
            popClose.addActionListener(listener);
            pop.add(popOpen);
            pop.add(popClose);
            trayIcon = new TrayIcon(buff.getScaledInstance(trayIconWidth, -1, Image.SCALE_SMOOTH),"181 NPR Server",pop);
            trayIcon.addActionListener(listener);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pop = new java.awt.PopupMenu();
        textField = new javax.swing.JTextField();
        updater = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        start = new javax.swing.JButton();
        restart = new javax.swing.JButton();
        stop = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        status = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        minimize = new javax.swing.JLabel();
        close = new javax.swing.JLabel();
        errorLogger = new javax.swing.JLabel();

        pop.setLabel("popupMenu1");

        textField.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                textFieldCaretUpdate(evt);
            }
        });

        updater.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                updaterCaretUpdate(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("181 NPR Server");
        setIconImage(new ImageIcon(getClass().getResource("/ServerLogo2.png")).getImage());
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Rondalo", 1, 24)); // NOI18N
        jLabel1.setText("181 NPR Server");

        start.setFont(new java.awt.Font("Rondalo", 1, 18)); // NOI18N
        start.setText("START");
        start.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        restart.setFont(new java.awt.Font("Rondalo", 1, 14)); // NOI18N
        restart.setText("RESTART");
        restart.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        restart.setEnabled(false);
        restart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartActionPerformed(evt);
            }
        });

        stop.setFont(new java.awt.Font("Rondalo", 1, 14)); // NOI18N
        stop.setText("STOP");
        stop.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        stop.setEnabled(false);
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        status.setColumns(20);
        status.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N
        status.setLineWrap(true);
        status.setRows(5);
        jScrollPane1.setViewportView(status);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/181 (2).jpg"))); // NOI18N

        minimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/minimize.png"))); // NOI18N
        minimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        minimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minimizeMouseClicked(evt);
            }
        });

        close.setIcon(new javax.swing.ImageIcon(getClass().getResource("/close.png"))); // NOI18N
        close.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closeMouseClicked(evt);
            }
        });

        errorLogger.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N
        errorLogger.setForeground(new java.awt.Color(255, 0, 0));
        errorLogger.setToolTipText("");
        errorLogger.setMaximumSize(new java.awt.Dimension(0, 253));
        errorLogger.setMinimumSize(new java.awt.Dimension(0, 253));
        errorLogger.setPreferredSize(new java.awt.Dimension(0, 253));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(errorLogger, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 31, Short.MAX_VALUE))
                            .addComponent(start, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(restart, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stop, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(10, 10, 10))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(minimize)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(close)
                                .addContainerGap())))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(minimize)
                        .addComponent(close)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(restart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(stop)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(errorLogger, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        start.setEnabled(false);
        try {
            // TODO add your handling code here:
            registry.rebind(server_name, remote);
            status.setText("");
            status.setText("Server Running . . .");
        } catch (RemoteException ex) {
//            Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
            textField.setText(ex.getMessage());
        }
        restart.setEnabled(true);
        stop.setEnabled(true);
    }//GEN-LAST:event_startActionPerformed

    private void restartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartActionPerformed
        restart.setEnabled(false);
        stop.setEnabled(false);
        try {
            status.setText(status.getText()+"\nServer Restarting . . .");
            registry.rebind(server_name, remote);
            status.setText(status.getText()+"\nRestarting Server . . .");
        } catch (RemoteException ex) {
//            Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
            textField.setText(ex.getMessage());
        }
        restart.setEnabled(true);
        stop.setEnabled(true);
        start.setEnabled(false);
    }//GEN-LAST:event_restartActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        // TODO add your handling code here:
        restart.setEnabled(false);
        stop.setEnabled(false);
        try {
            status.setText(status.getText()+"\nStopping Server . . .");
            registry.unbind(server_name);
            status.setText(status.getText()+"\nServer Stopped!");
        } catch (RemoteException ex) {
//            Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
            textField.setText(ex.getMessage());
        } catch (NotBoundException ex) {
//            Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
            textField.setText(ex.getMessage());
        }
        start.setEnabled(true);
    }//GEN-LAST:event_stopActionPerformed

    private void closeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closeMouseClicked
        closeProgram();
    }//GEN-LAST:event_closeMouseClicked

    private void minimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minimizeMouseClicked
        // TODO add your handling code here:
        minimizeFrame();
    }//GEN-LAST:event_minimizeMouseClicked

    private void textFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_textFieldCaretUpdate
        // TODO add your handling code here:
        errorLogger.setText(textField.getText());
    }//GEN-LAST:event_textFieldCaretUpdate

    private void updaterCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_updaterCaretUpdate
        // TODO add your handling code here:
        if(updater.getText().equals("update")){
            try {
                registry.rebind(server_name, remote);
            } catch (RemoteException ex) {
//                Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
                textField.setText(ex.getMessage());
            }
        }
    }//GEN-LAST:event_updaterCaretUpdate

    private void minimizeFrame(){
        try {
            tray.add(trayIcon);
            this.setVisible(false);
        } catch (AWTException ex) {
//            Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
            textField.setText(ex.getMessage());
        }
    }
    
    private void openFrame(){
        tray.remove(trayIcon);
        this.setVisible(true);
    }
    
    private void closeProgram(){
        System.exit(0);
    }
    
    private boolean runWamp(){
        try {
            String batchCommand = "C:\\wamp\\wampmanager.exe";
            System.out.println(batchCommand);

            Runtime runtime = Runtime.getRuntime();
            Process process = runtime.exec(batchCommand);
            int processComplete = process.waitFor();
            if(processComplete == 0){
                return true;
            }
        } catch (IOException ex) {
            Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    
    /*private Image setTrayIcon(SystemTray thisTray){
        Image image = Toolkit.getDefaultToolkit().getImage("ServerLogo2.png");
        Dimension trayIconSize = thisTray.getTrayIconSize();
        image = image.getScaledInstance(trayIconSize.width, trayIconSize.height, Image.SCALE_SMOOTH);
        return image;
    }*/
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NPRServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NPRServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NPRServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NPRServerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                /*try {
                    Thread.sleep(4000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(NPRServerUI.class.getName()).log(Level.SEVERE, null, ex);
                }*/
                new NPRServerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel close;
    private javax.swing.JLabel errorLogger;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel minimize;
    private java.awt.PopupMenu pop;
    private javax.swing.JButton restart;
    private javax.swing.JButton start;
    private javax.swing.JTextArea status;
    private javax.swing.JButton stop;
    private javax.swing.JTextField textField;
    private javax.swing.JTextField updater;
    // End of variables declaration//GEN-END:variables
}
