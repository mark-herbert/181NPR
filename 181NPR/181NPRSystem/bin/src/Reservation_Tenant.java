import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.rmi.RemoteException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Jefren
 */
public class Reservation_Tenant extends javax.swing.JFrame {

    private final NPRInterface client;
    private int count = 0;
    private ArrayList<String> reservationDetails;
    private String timeStamp = new SimpleDateFormat("yyyy-MM-dd").format(Calendar.getInstance().getTime());
    private String user;
    private final MessageDialog md = new MessageDialog();
    private String origin;
    private IFloorPlanPreview ifpp = new IFloorPlanPreview();

    /**
     * Creates new form Reservation_Tenant
     *
     * @param client
     * @param user
     * @param roomNumber
     * @param origin
     */
    public Reservation_Tenant(NPRInterface client, String user, String roomNumber, String origin) {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icons/Resident.png")));
        initComponents();
        saveButton.setEnabled(false);
        clearButton.setEnabled(false);
        this.client = client;
        this.user = user;
        this.origin = origin;
        try {
            viewRooms();
            start();
        } catch (RemoteException ex) {
            md.error(this, ex.getMessage());
//            Logger.getLogger(Reservation_Tenant.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (roomNumber != null) {
            roomNumberComboBox.setSelectedItem(roomNumber);
        }
    }

    private void start() {
        sterm.setSelected(true);
        others.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        term = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fName = new javax.swing.JTextField();
        mName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        mNo = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        zipCode = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        roomNumberComboBox = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        roomTypeData = new javax.swing.JLabel();
        schoolTermComboBox = new javax.swing.JComboBox();
        others = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        ayFrom = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        ayTo = new javax.swing.JTextField();
        oth = new javax.swing.JRadioButton();
        sterm = new javax.swing.JRadioButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Personal Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rondalo", 0, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel1.setText("Name:");

        lName.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        lName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                lNameCaretUpdate(evt);
            }
        });
        lName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lNameKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Last Name");

        fName.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        fName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                fNameCaretUpdate(evt);
            }
        });
        fName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fNameKeyTyped(evt);
            }
        });

        mName.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        mName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mNameKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Middle Name");

        jLabel5.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel5.setText("Address:");

        address.setColumns(20);
        address.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        address.setLineWrap(true);
        address.setRows(5);
        address.setWrapStyleWord(true);
        address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addressKeyTyped(evt);
            }
        });
        jScrollPane1.setViewportView(address);

        jLabel6.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel6.setText("Mobile Number:");

        mNo.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        mNo.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                mNoCaretUpdate(evt);
            }
        });
        mNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                mNoKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel7.setText("Zip Code:");

        zipCode.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        zipCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                zipCodeKeyTyped(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel8.setText("Email:");

        email.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emailKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("*");

        jLabel3.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("First Name");

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("*");

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("*");

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("*");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addGap(62, 62, 62)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addGap(62, 62, 62)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mName)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mNo, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(zipCode, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(email)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel12)
                    .addComponent(jLabel3)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel19))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(mNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zipCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Reservation Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rondalo", 0, 12))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel10.setText("Room Number:");

        roomNumberComboBox.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        roomNumberComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        roomNumberComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                roomNumberComboBoxItemStateChanged(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel11.setText("Room Type:");

        roomTypeData.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        roomTypeData.setText("Suite");

        schoolTermComboBox.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        schoolTermComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "First Semester", "Second Semester", "Summer Term" }));
        schoolTermComboBox.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        others.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel13.setText("Academic Year:");

        ayFrom.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        ayFrom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ayFromKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel16.setText("to");

        ayTo.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        ayTo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ayToKeyTyped(evt);
            }
        });

        oth.setBackground(new java.awt.Color(255, 255, 255));
        term.add(oth);
        oth.setText("Others:");
        oth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        oth.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                othItemStateChanged(evt);
            }
        });
        oth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                othActionPerformed(evt);
            }
        });

        sterm.setBackground(new java.awt.Color(255, 255, 255));
        term.add(sterm);
        sterm.setText("School Term:");
        sterm.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sterm.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                stermItemStateChanged(evt);
            }
        });
        sterm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stermActionPerformed(evt);
            }
        });

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Floor Plan.png"))); // NOI18N
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("*");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(27, 27, 27)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(roomTypeData)
                            .addComponent(roomNumberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(oth)
                            .addComponent(sterm))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(schoolTermComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ayTo, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(others))))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel9))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(roomNumberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(roomTypeData))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(schoolTermComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(ayFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(ayTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(others, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(sterm)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(oth)))
                .addGap(19, 19, 19))
        );

        cancelButton.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        saveButton.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        saveButton.setText("Save");
        saveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        clearButton.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        clearButton.setText("Clear");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 0, 0));
        jLabel23.setText("* Required Fields");

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/help.png"))); // NOI18N
        jLabel20.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(clearButton)
                            .addGap(18, 18, 18)
                            .addComponent(saveButton)
                            .addGap(18, 18, 18)
                            .addComponent(cancelButton)))
                    .addComponent(jLabel20))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(saveButton)
                    .addComponent(clearButton)
                    .addComponent(jLabel23))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void stermItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_stermItemStateChanged

    }//GEN-LAST:event_stermItemStateChanged

    private void othItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_othItemStateChanged

    }//GEN-LAST:event_othItemStateChanged

    private void stermActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stermActionPerformed
        if (sterm.isSelected()) {
            others.setEnabled(false);
            schoolTermComboBox.setEnabled(true);
            ayFrom.setEnabled(true);
            ayTo.setEnabled(true);
        }
    }//GEN-LAST:event_stermActionPerformed

    private void othActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_othActionPerformed
        if (oth.isSelected()) {
            others.setEnabled(true);
            schoolTermComboBox.setEnabled(false);
            ayFrom.setEnabled(false);
            ayTo.setEnabled(false);
        }
    }//GEN-LAST:event_othActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        if (!ifpp.isVisible()) {
            ifpp = new IFloorPlanPreview(roomNumberComboBox, client);
            ifpp.setVisible(true);
        } else {
            ifpp.setAlwaysOnTop(true);
            ifpp.setAlwaysOnTop(false);
        }
    }//GEN-LAST:event_jLabel9MouseClicked

    private void roomNumberComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_roomNumberComboBoxItemStateChanged
        // TODO add your handling code here:
        try {
            viewRoomType();
        } catch (RemoteException ex) {
            md.error(this, ex.getMessage());
//            Logger.getLogger(Reservation_Tenant.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_roomNumberComboBoxItemStateChanged

    private void lNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lNameKeyTyped
//        enableClearButton();
//        enableButton();
    }//GEN-LAST:event_lNameKeyTyped

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        clearAll();
        clearButton.setEnabled(false);
        saveButton.setEnabled(false);
    }//GEN-LAST:event_clearButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (checker()) {
            if (md.confirmationSave(this) == md.YES) {
                saveToPdf();
                insertIntoDatabase();
                ifpp.setIFPPVisible();
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void insertIntoDatabase() throws NumberFormatException {
        try {
            reservationDetails = new ArrayList<>();
            String temp = "";
            reservationDetails.add(roomNumberComboBox.getSelectedItem().toString().trim());
            reservationDetails.add(lName.getText().trim());
            reservationDetails.add(fName.getText().trim());
            reservationDetails.add(mName.getText().trim());
            reservationDetails.add(address.getText().trim());
            reservationDetails.add(zipCode.getText().trim());
            reservationDetails.add(mNo.getText().trim());
            reservationDetails.add(schoolTermComboBox.getSelectedItem().toString());
            reservationDetails.add(email.getText().trim());
            reservationDetails.add(ayFrom.getText().trim());
            reservationDetails.add(ayTo.getText().trim());
            reservationDetails.add(others.getText().trim());
            reservationDetails.add(timeStamp);
            reservationDetails.add(roomTypeData.getText().trim());

            if (client.insertTenantReservation(reservationDetails)) {
                if(!client.updateRoomStatus(roomNumberComboBox.getSelectedItem().toString())){
                    md.error(this, "Room status update failed");
                }
                md.successful(this);
                saveButton.setEnabled(false);
                clearAll();
                if (origin.equals("reservation")) {
                    new Reservation(client, user).setVisible(true);
                } else {
                    new IFloorPlan(client, user).setVisible(true);
                }
                dispose();
            } else {
                md.unsuccessful(this);
            }

        } catch (RemoteException ex) {
            md.error(this, ex.getMessage());
//            Logger.getLogger(Reservation_Tenant.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean checker() {
        boolean tester;
        if (!mNo.getText().trim().isEmpty() & address()
                & nameChecker()
                & mobileNumberChecker()
                & zipCodeChecker()
                & emailAddressChecker()
                & yearTo()
                & yearFrom()) {
            tester = true;
        } else {
            tester = false;
        }
        return tester;
    }

    private boolean nameChecker() {
        if (fName.getText().contains(",") || lName.getText().contains(",") || mName.getText().contains(",")) {
            md.error(this, "Check Comma (,) in the fields Last Name, First Name, and Middle Name");
            return false;
        } else if (fName.getText().trim().isEmpty() || lName.getText().trim().isEmpty()) {
            md.error(this, "First Name and Last Name are required to fill-in.");
            return false;
        }
        return true;
    }

    private boolean zipCodeChecker() {
        String str = zipCode.getText().trim();
        char[] chars = str.toCharArray();
        boolean tester = true;
        //if it is null
        if (!str.equals("")) {
            for (int i = 0; i < chars.length; i++) {
                try {
                    Integer.parseInt(String.valueOf(chars[i]));
                } catch (NumberFormatException nfe) {
                    tester = false;
                    md.error(this, "Not a number.");
                    zipCode.setText("");
                }
            }
            //checks if the zipCode is 4 digits.
            if (!(str.length() >= 4)) {
                tester = false;
                md.error(this, "The zipcode is less than 4 digits.");
                zipCode.setText("");
            }

            if (!(str.length() <= 6)) {
                tester = false;
                md.error(this, "The zipcode is more than 6 digits.");
                zipCode.setText("");
            }
        }
        return tester;
    }

    private boolean address() {
        if (address.getText().trim().isEmpty()) {
            md.error(this, "Address is required to fill-in.");
            return false;
        }
        return true;
    }

    private boolean yearTo() {
        String str = ayTo.getText().trim();
        char[] chars = str.toCharArray();
        boolean tester = true;
        //if it is null
        if (!str.equals("")) {
            //checks if the Year is alphanummeric
            for (int i = 0; i < chars.length; i++) {
                try {
                    Integer.parseInt(String.valueOf(chars[i]));
                } catch (NumberFormatException nfe) {
                    tester = false;
                    md.error(this, "You've entered an alphanumeric, please try again.");
                    ayTo.setText("");
                }
            }
            //checks if the Year is 4 digits.
            if (str.length() != 4) {
                tester = false;
                md.error(this, "The number you've enter is more than 4 digits.");
                ayTo.setText("");
            }
        }
        return tester;
    }

    private boolean yearFrom() {
        String str = ayFrom.getText().trim();
        char[] chars = str.toCharArray();
        boolean tester = true;
        //if it is null
        if (!str.equals("")) {
            //checks if the Year is alphanummeric
            for (int i = 0; i < chars.length; i++) {
                try {
                    Integer.parseInt(String.valueOf(chars[i]));
                } catch (NumberFormatException nfe) {
                    tester = false;
                    md.error(this, "Not a number.");
                    ayFrom.setText("");
                }
            }
            //checks if the Year is 4 digits.
            if (str.length() != 4) {
                tester = false;
                md.error(this, "The year is not 4 digits.");
                ayFrom.setText("");
            }
        }
        return tester;
    }

    private boolean mobileNumberChecker() {
        String str = mNo.getText().trim();
        char[] chars = str.toCharArray();
        boolean tester = true;
        //if it is null
        if (str.length() != 11) {
            saveButton.setEnabled(false);
            md.error(this, "The mobile number must be 11 digits.");
            mNo.setText("");
            return false;
        }
        if (!str.equals("")) {//checks if the number is alphanumeric
            for (int i = 0; i < chars.length; i++) {
                try {
                    Integer.parseInt(String.valueOf(chars[i]));
                } catch (NumberFormatException nfe) {
                    md.error(this, "Not a Number");
                    saveButton.setEnabled(false);
                    mNo.setText("");
                    return false;
                }
            }
            //checks if the number is 11 digits.
        }
        return tester;
    }

    private boolean emailAddressChecker() {
        char atSymbol = '@';
        String dotCom = ".com";
        String emailAddress = email.getText().trim();
        boolean tester = true;
        //find the @ symbol
        int atpos = emailAddress.indexOf(atSymbol);
        //find the .com
        int emadd = emailAddress.indexOf(dotCom, atpos);
        if (!emailAddress.equals("")) {
            if (emadd == -1) {
                tester = false;
                md.error(this, "Invalid email address.");
            }
        }
        return tester;
    }


    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        if (md.confirmationCancel(this) == md.YES) {
            // yes option
            if ("reservation".equals(origin)) {
                ifpp.setIFPPVisible();
                new Reservation(client, user).setVisible(true);
            } else {
                ifpp.setIFPPVisible();
                new IFloorPlan(client, user).setVisible(true);
            }
            dispose();
        }
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void fNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fNameKeyTyped
//        enableClearButton();
//        enableButton();
//        System.out.println(lName.getText().trim().substring(0, 1).toUpperCase() + lName.getText().trim().substring(1,lName.getText().length()));
    }//GEN-LAST:event_fNameKeyTyped

    private void enableClearButton() {
        // TODO add your handling code here:
        if (!fName.getText().isEmpty()
                || !lName.getText().isEmpty()
                || !mName.getText().isEmpty()
                || !address.getText().isEmpty()
                || !mNo.getText().isEmpty()
                || !zipCode.getText().isEmpty()
                || !email.getText().isEmpty()
                || !ayFrom.getText().isEmpty()
                || !ayTo.getText().isEmpty()
                || !others.getText().isEmpty()) {
            clearButton.setEnabled(true);
        } else {
            clearButton.setEnabled(false);
        }
    }

    private void enableButton() {
        // TODO add your handling code here:
        if (!fName.getText().trim().isEmpty() & !lName.getText().trim().isEmpty()
                & !mNo.getText().trim().isEmpty() & !address.getText().trim().isEmpty()) {
            saveButton.setEnabled(true);
        } else {
            saveButton.setEnabled(false);
        }
    }

    private void mNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mNameKeyTyped
        // TODO add your handling code here:
        enableClearButton();
        enableButton();
    }//GEN-LAST:event_mNameKeyTyped

    private void addressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressKeyTyped
        // TODO add your handling code here:
        enableClearButton();
        enableButton();
    }//GEN-LAST:event_addressKeyTyped

    private void mNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mNoKeyTyped
        // TODO add your handling code here:
//        enableClearButton();
//        enableButton();
    }//GEN-LAST:event_mNoKeyTyped

    private void zipCodeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zipCodeKeyTyped
        // TODO add your handling code here:
        enableClearButton();
        enableButton();
    }//GEN-LAST:event_zipCodeKeyTyped

    private void emailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyTyped
        // TODO add your handling code here:
        enableClearButton();
        enableButton();
    }//GEN-LAST:event_emailKeyTyped

    private void ayFromKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ayFromKeyTyped
        // TODO add your handling code here:
        enableClearButton();
        enableButton();
    }//GEN-LAST:event_ayFromKeyTyped

    private void ayToKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ayToKeyTyped
        // TODO add your handling code here:
        enableClearButton();
        enableButton();
    }//GEN-LAST:event_ayToKeyTyped

    private void lNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_lNameCaretUpdate
        // TODO add your handling code here:
        enableClearButton();
        enableButton();
    }//GEN-LAST:event_lNameCaretUpdate

    private void fNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_fNameCaretUpdate
        // TODO add your handling code here:
        enableClearButton();
        enableButton();
    }//GEN-LAST:event_fNameCaretUpdate

    private void mNoCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_mNoCaretUpdate
        // TODO add your handling code here:
        enableClearButton();
        enableButton();
    }//GEN-LAST:event_mNoCaretUpdate

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        // TODO add your handling code here:
        try {
            String path = "";
            BufferedReader br = new BufferedReader(new FileReader("dir\\docs.txt"));
            try {
                StringBuilder sb = new StringBuilder();
                String line = br.readLine();

                while (line != null) {
                    sb.append(line);
                    sb.append(System.lineSeparator());
                    line = br.readLine();
                }
                path = sb.toString().trim();
            } catch (IOException ex) {
//                Logger.getLogger(AdminArchiveFrame.class.getName()).log(Level.SEVERE, null, ex);
                new MessageDialog().error(this, ex.getMessage());
            } finally {
                br.close();
            }
            Desktop.getDesktop().browse(new File(path).toURI());
        } catch (IOException ex) {
            new MessageDialog().error(this, ex.getMessage());
//            Logger.getLogger(Reservation_Tenant.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel20MouseClicked

    private void clearAll() {
        lName.setText("");
        mName.setText("");
        fName.setText("");
        address.setText("");
        mNo.setText("");
        zipCode.setText("");
        email.setText("");
        ayFrom.setText("");
        ayTo.setText("");
        others.setText("");
    }

    private void saveToPdf() {
        ReservationImpl reservationImpl = new ReservationImpl();
        reservationImpl.setlName(lName.getText().trim());
        reservationImpl.setfName(fName.getText().trim());
        reservationImpl.setmName(mName.getText().trim());
        reservationImpl.setDatePaid(new SimpleDateFormat("MM/dd/yyyy").format(Calendar.getInstance().getTime()));
        reservationImpl.setAddress(address.getText().trim());
        reservationImpl.setZipCode(zipCode.getText().trim());
        reservationImpl.setmNumber(mNo.getText().trim());
        reservationImpl.setEmail(email.getText().trim());
        reservationImpl.setRoom(roomNumberComboBox.getSelectedItem().toString());
        reservationImpl.setRoomType(roomTypeData.getText());
        if (sterm.isSelected()) {
            reservationImpl.setsTerm(schoolTermComboBox.getSelectedItem().toString());
            reservationImpl.setAyFrom(ayFrom.getText().trim());
            reservationImpl.setAyTo(ayTo.getText().trim());
            reservationImpl.setOthers(null);
        } else {
            reservationImpl.setsTerm(null);
            reservationImpl.setOthers(others.getText());
        }
        try {
            if (client.saveReservationToPdf(reservationImpl)) {
                md.successful(this, "Done saving Reservation Form to PDF");
            } else {
                md.unsuccessful(this, "Failed to save file to PDF");
            }
        } catch (RemoteException ex) {
//            Logger.getLogger(Reservation_Tenant.class.getName()).log(Level.SEVERE, null, ex);
            new MessageDialog().error(this, ex.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reservation_Tenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reservation_Tenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reservation_Tenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservation_Tenant.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Reservation_Tenant(null, null, null, null).setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea address;
    private javax.swing.JTextField ayFrom;
    private javax.swing.JTextField ayTo;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JTextField email;
    private javax.swing.JTextField fName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lName;
    private javax.swing.JTextField mName;
    private javax.swing.JTextField mNo;
    private javax.swing.JRadioButton oth;
    private javax.swing.JTextField others;
    private javax.swing.JComboBox roomNumberComboBox;
    private javax.swing.JLabel roomTypeData;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox schoolTermComboBox;
    private javax.swing.JRadioButton sterm;
    private javax.swing.ButtonGroup term;
    private javax.swing.JTextField zipCode;
    // End of variables declaration//GEN-END:variables

    private void viewRooms() throws RemoteException {
        ArrayList<String> rooms = client.getRooms();
        for (String room : rooms) {
            roomNumberComboBox.addItem(room);
        }
    }

    private void viewRoomType() throws RemoteException {
        switch (client.getRoomType(roomNumberComboBox.getSelectedItem().toString())) {
            case "S":
                roomTypeData.setText("Single Sharing Room");
                break;

            case "D":
                roomTypeData.setText("Double Sharing Room");
                break;

            case "T":
                roomTypeData.setText("Triple Sharing Room");
                break;

            default:
                roomTypeData.setText("Suite");
                break;
        }
    }
}
