import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.file.Files;
import java.rmi.RemoteException;
import java.sql.ResultSet;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Jefren
 */
public class Registration_Admin extends javax.swing.JFrame {

    //private DatabaseConnection database = new DatabaseConnection();

    private ResultSet result;
    private final NPRInterface client;
    private String file = null;
    private ArrayList<String> adminDetails;
    private String origin;
    private String parentOrigin;
    private String user;
    private final MessageDialog md = new MessageDialog();

    /**
     * Creates new form Registration_Admin
     *
     * @param origin
     * @param parentOrigin
     * @param client
     * @param user
     */
    public Registration_Admin(String origin, String parentOrigin, String user, NPRInterface client) {
        initComponents();
        this.client = client;
        this.origin = origin;
        this.parentOrigin = parentOrigin;
        this.user = user;
        FileNameExtensionFilter filter = new FileNameExtensionFilter("jpeg and png files", "jpg", "png");
        chooser.setFileFilter(filter);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderGroup = new javax.swing.ButtonGroup();
        chooser = new javax.swing.JFileChooser();
        mainPanel = new javax.swing.JPanel();
        basicInfoPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        lastName = new javax.swing.JTextField();
        firstName = new javax.swing.JTextField();
        middleName = new javax.swing.JTextField();
        lastNameLabel1 = new javax.swing.JLabel();
        firstNameLabel1 = new javax.swing.JLabel();
        middleNameLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        birthdate = new datechooser.beans.DateChooserCombo();
        jLabel9 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        confirmPassword = new javax.swing.JPasswordField();
        uploadPictureButton = new javax.swing.JButton();
        fileName = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();

        chooser.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(new ImageIcon(getClass().getResource("icons/181NPR.png")).getImage());
        setUndecorated(true);
        setResizable(false);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        basicInfoPanel.setBackground(new java.awt.Color(255, 255, 255));
        basicInfoPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(" "));

        nameLabel.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        nameLabel.setText("Name:");

        lastName.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N

        firstName.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N

        middleName.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N

        lastNameLabel1.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        lastNameLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastNameLabel1.setText("Last Name");

        firstNameLabel1.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        firstNameLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstNameLabel1.setText("First Name");

        middleNameLabel1.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        middleNameLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        middleNameLabel1.setText("Middle Name");

        jLabel7.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel7.setText("Gender:");

        male.setBackground(new java.awt.Color(255, 255, 255));
        genderGroup.add(male);
        male.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        male.setText("Male");
        male.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        female.setBackground(new java.awt.Color(255, 255, 255));
        genderGroup.add(female);
        female.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        female.setText("Female");
        female.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jLabel8.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        jLabel8.setText("Birthday:");

        birthdate.setCurrentView(new datechooser.view.appearance.AppearancesList("Light",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    birthdate.setNothingAllowed(false);
    birthdate.setFormat(2);
    try {
        birthdate.setDefaultPeriods(new datechooser.model.multiple.PeriodSet(new datechooser.model.multiple.Period(new java.util.GregorianCalendar(1990, 0, 1),
            new java.util.GregorianCalendar(1990, 0, 1))));
} catch (datechooser.model.exeptions.IncompatibleDataExeption e1) {
    e1.printStackTrace();
    }
    birthdate.setFieldFont(new java.awt.Font("Rondalo", java.awt.Font.PLAIN, 13));
    birthdate.setNavigateFont(new java.awt.Font("Rondalo", java.awt.Font.PLAIN, 12));

    jLabel9.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
    jLabel9.setText("Email:");

    email.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N

    jLabel10.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
    jLabel10.setText("Username:");

    username.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N

    jLabel11.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
    jLabel11.setText("Password:");

    password.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N

    jLabel12.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
    jLabel12.setText("Confirm Password:");

    confirmPassword.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N

    uploadPictureButton.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
    uploadPictureButton.setText("Upload Picture");
    uploadPictureButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    uploadPictureButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            uploadPictureButtonActionPerformed(evt);
        }
    });

    fileName.setFont(new java.awt.Font("Rondalo", 2, 12)); // NOI18N
    fileName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
    fileName.setText("picture.jpg ");

    javax.swing.GroupLayout basicInfoPanelLayout = new javax.swing.GroupLayout(basicInfoPanel);
    basicInfoPanel.setLayout(basicInfoPanelLayout);
    basicInfoPanelLayout.setHorizontalGroup(
        basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(basicInfoPanelLayout.createSequentialGroup()
            .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(basicInfoPanelLayout.createSequentialGroup()
                    .addGap(12, 12, 12)
                    .addComponent(nameLabel)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lastName)
                        .addComponent(lastNameLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(firstName)
                        .addComponent(firstNameLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(middleNameLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                        .addComponent(middleName, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGroup(basicInfoPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel7)
                        .addComponent(jLabel8)
                        .addComponent(jLabel9))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicInfoPanelLayout.createSequentialGroup()
                            .addComponent(male, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(birthdate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                        .addComponent(email, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(basicInfoPanelLayout.createSequentialGroup()
                            .addGap(38, 38, 38)
                            .addComponent(jLabel11))
                        .addGroup(basicInfoPanelLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel12))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicInfoPanelLayout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel10)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(username)
                        .addComponent(password)
                        .addComponent(confirmPassword, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicInfoPanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(fileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addComponent(uploadPictureButton)))
            .addContainerGap())
    );
    basicInfoPanelLayout.setVerticalGroup(
        basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(basicInfoPanelLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(nameLabel)
                .addComponent(lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(middleName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lastNameLabel1)
                .addComponent(firstNameLabel1)
                .addComponent(middleNameLabel1))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(male)
                .addComponent(female)
                .addComponent(jLabel7)
                .addComponent(jLabel10))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addComponent(birthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel8))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(confirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel9)
                .addComponent(jLabel12))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(basicInfoPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(uploadPictureButton)
                .addComponent(fileName)))
    );

    cancelButton.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
    cancelButton.setText("Back");
    cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            cancelButtonMouseClicked(evt);
        }
    });

    saveButton.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
    saveButton.setText("Save");
    saveButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            saveButtonMouseClicked(evt);
        }
    });

    javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
    mainPanel.setLayout(mainPanelLayout);
    mainPanelLayout.setHorizontalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(mainPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(basicInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(cancelButton)
            .addGap(18, 18, 18)
            .addComponent(saveButton)
            .addContainerGap())
    );
    mainPanelLayout.setVerticalGroup(
        mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(mainPanelLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(basicInfoPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cancelButton)
                .addComponent(saveButton))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(mainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        this.dispose();
        switch (origin) {
            case "Registration":
                new Registration(client, user).setVisible(true);
                break;
            case "adminList":
                new AdminList(parentOrigin, user, client).setVisible(true);
                break;
        }
    }//GEN-LAST:event_cancelButtonMouseClicked

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
        String pass = confirmPassword.getText();
        String gender = "";
        if (test() && pass.equals(password.getText())) {
            if (md.confirmationSave(this) == md.YES) {
                AdminImpl adminImpl = new AdminImpl();
                UserLogin userLogin = new UserLogin(username.getText(), pass);
                try {
                    if (male.isSelected()) {
                        gender = "Male";
                    } else {
                        gender = "Female";
                    }
                    adminImpl.setFName(firstName.getText());
                    adminImpl.setMName(middleName.getText());
                    adminImpl.setLName(lastName.getText());
                    adminImpl.setGender(gender);
                    adminImpl.setBirthdate(new SimpleDateFormat("MMM dd, yyyy").format(birthdate.getDateFormat().parse(birthdate.getText())));
                    adminImpl.setEmail(email.getText());

                    if (file != null) {
                        File thisFile = new File(file);
                        adminImpl.setPicture(Files.readAllBytes(thisFile.toPath()));
                    } else {
                        adminImpl.setPicture(null);
                    }
                    if (!client.insertRegistrationAdmin(adminImpl, userLogin)) {
                        md.successful(this);
                        dispose();
                        switch (origin) {
                            case "Registration":
                                new Registration(client, user).setVisible(true);
                                break;
                            case "adminList":
                                new AdminList(parentOrigin, user, client).setVisible(true);
                                break;
                        }
                    } else {
                        md.unsuccessful(this);
                    }
                } catch (RemoteException ex) {
//                    Logger.getLogger(Registration_Admin.class.getName()).log(Level.SEVERE, null, ex);
                    new MessageDialog().error(this, ex.getMessage());
                } catch (FileNotFoundException ex) {
//                    Logger.getLogger(Registration_Admin.class.getName()).log(Level.SEVERE, null, ex);
                    new MessageDialog().error(this, ex.getMessage());
                } catch (IOException | ParseException ex) {
//                    Logger.getLogger(Registration_Admin.class.getName()).log(Level.SEVERE, null, ex);
                    new MessageDialog().error(this, ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_saveButtonMouseClicked

    private void uploadPictureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadPictureButtonActionPerformed
        // TODO add your handling code here:=
        chooser.showOpenDialog(null);
        if (chooser.getSelectedFile() != null) {
            fileName.setText(chooser.getSelectedFile().getName() + " ");
            file = chooser.getSelectedFile().toString();
        }
    }//GEN-LAST:event_uploadPictureButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Registration_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Registration_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Registration_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Registration_Admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        /*java.awt.EventQueue.invokeLater(new Runnable() {
         public void run() {
         new Registration_Admin(new AccessibleServer()).setVisible(true);
         }
         });*/
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel basicInfoPanel;
    private datechooser.beans.DateChooserCombo birthdate;
    private javax.swing.JButton cancelButton;
    private javax.swing.JFileChooser chooser;
    private javax.swing.JPasswordField confirmPassword;
    private javax.swing.JTextField email;
    private javax.swing.JRadioButton female;
    private javax.swing.JLabel fileName;
    private javax.swing.JTextField firstName;
    private javax.swing.JLabel firstNameLabel1;
    private javax.swing.ButtonGroup genderGroup;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lastName;
    private javax.swing.JLabel lastNameLabel1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField middleName;
    private javax.swing.JLabel middleNameLabel1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JPasswordField password;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton uploadPictureButton;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

    private boolean test() {
        if (firstName.getText().isEmpty()
                | middleName.getText().isEmpty()
                | lastName.getText().isEmpty()
                | !nameChecker()
                | (!male.isSelected()
                && !female.isSelected())
                | username.getText().isEmpty()
                | password.getText().isEmpty()
                | confirmPassword.getText().isEmpty()
                | email.getText().isEmpty()) {
            return false;
        } else {
            return true;
        }
    }

    private boolean nameChecker() {
        if (lastName.getText().contains(",") || firstName.getText().contains(",") || middleName.getText().contains(",")) {
            md.error(this, "Check Comma (,) in the fields Last Name, First Name, and Middle Name");
            return false;
        }
        return true;
    }
}
