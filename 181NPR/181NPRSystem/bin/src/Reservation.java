import java.awt.Desktop;
import java.awt.Toolkit;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.rmi.RemoteException;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Jefren
 */
public class Reservation extends javax.swing.JFrame {
    private final NPRInterface client;
    private DefaultTableModel tableModel = new DefaultTableModel();
    private ArrayList<ReservationImpl> reservationInfo;
    private DateFormat originalFormat;
    private DateFormat targetFormat;
    private java.util.Date utilDate;
    private java.sql.Date sDate;
    private String formattedDate = "";
    private String nDate = "";
    private String name = "";
    private int column = 0;
    private int row = 0;
    private String user;
    private final MessageDialog md = new MessageDialog();

    /**
     * Creates new form Reservation
     *
     * @param client
     * @param user
     */
    public Reservation(NPRInterface client, String user) {
        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("icons/Reservation.png")));
        initComponents();
        this.client = client;
        this.user = user;
        tableModel = (DefaultTableModel) reservationTable.getModel();
        byName.setEnabled(false);
        byDate.setEnabled(false);
        try {
            setRow();
            popUp.add(Register);
            popUp.add(Cancel);
            sort();
        } catch (ClassNotFoundException | SQLException | ParseException ex) {
            md.error(this, ex.getMessage());
        }
    }

    private void sort() {
        tableModel = (DefaultTableModel) reservationTable.getModel();
        reservationTable.setRowSorter(new TableRowSorter(tableModel));
        int[] selection = reservationTable.getSelectedRows();
        for (int i = 0; i < selection.length; i++) {
            selection[i] = reservationTable.convertRowIndexToModel(selection[i]);
        }
    }

    private void setRow() throws ClassNotFoundException, SQLException, ParseException {
        try {
            tableModel.getDataVector().removeAllElements();
            tableModel.fireTableDataChanged();
            reservationInfo = client.getAllReservation();
            for (ReservationImpl info : reservationInfo) {
                tableModel.addRow(new Object[]{
                        info.getFullName(),
                        info.getRoom(),
                        info.getDatePaid()
                    });
            }
            reservationTable.setModel(tableModel);
            
        } catch (RemoteException ex) {
            md.error(this, ex.getMessage());
//            Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUp = new javax.swing.JPopupMenu();
        Register = new javax.swing.JMenuItem();
        Cancel = new javax.swing.JMenuItem();
        searchGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        reserveAsResident = new javax.swing.JLabel();
        logo = new javax.swing.JLabel();
        home = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        reservationTable = new javax.swing.JTable();
        byName = new javax.swing.JTextField();
        nameR = new javax.swing.JRadioButton();
        dateR = new javax.swing.JRadioButton();
        byDate = new datechooser.beans.DateChooserCombo();
        jLabel1 = new javax.swing.JLabel();

        Register.setText("Register");
        Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterActionPerformed(evt);
            }
        });
        popUp.add(Register);

        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });
        popUp.add(Cancel);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        reserveAsResident.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        reserveAsResident.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Resident.png"))); // NOI18N
        reserveAsResident.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        reserveAsResident.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reserveAsResidentMouseClicked(evt);
            }
        });

        logo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        logo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/monitoringsystem/181.jpg"))); // NOI18N

        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Back.png"))); // NOI18N
        home.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tentative List of Resident(s)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Rondalo", 0, 12))); // NOI18N

        reservationTable.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        reservationTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Name", "Room", "Date Paid"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        reservationTable.getTableHeader().setResizingAllowed(false);
        reservationTable.getTableHeader().setReorderingAllowed(false);
        reservationTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                reservationTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(reservationTable);
        if (reservationTable.getColumnModel().getColumnCount() > 0) {
            reservationTable.getColumnModel().getColumn(0).setResizable(false);
            reservationTable.getColumnModel().getColumn(0).setPreferredWidth(230);
            reservationTable.getColumnModel().getColumn(1).setResizable(false);
            reservationTable.getColumnModel().getColumn(1).setPreferredWidth(30);
            reservationTable.getColumnModel().getColumn(2).setResizable(false);
            reservationTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        }

        byName.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        byName.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                byNameCaretUpdate(evt);
            }
        });

        nameR.setBackground(new java.awt.Color(255, 255, 255));
        searchGroup.add(nameR);
        nameR.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        nameR.setText("Name:");
        nameR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameRMouseClicked(evt);
            }
        });

        dateR.setBackground(new java.awt.Color(255, 255, 255));
        searchGroup.add(dateR);
        dateR.setFont(new java.awt.Font("Rondalo", 0, 12)); // NOI18N
        dateR.setText("Date of Reservation:");
        dateR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateRMouseClicked(evt);
            }
        });

        byDate.setCurrentView(new datechooser.view.appearance.AppearancesList("Light",
            new datechooser.view.appearance.ViewAppearance("custom",
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    true,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 255),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(128, 128, 128),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(0, 0, 255),
                    false,
                    true,
                    new datechooser.view.appearance.swing.LabelPainter()),
                new datechooser.view.appearance.swing.SwingCellAppearance(new java.awt.Font("Tahoma", java.awt.Font.PLAIN, 11),
                    new java.awt.Color(0, 0, 0),
                    new java.awt.Color(255, 0, 0),
                    false,
                    false,
                    new datechooser.view.appearance.swing.ButtonPainter()),
                (datechooser.view.BackRenderer)null,
                false,
                true)));
    byDate.setNothingAllowed(false);
    byDate.setBehavior(datechooser.model.multiple.MultyModelBehavior.SELECT_SINGLE);
    byDate.addCommitListener(new datechooser.events.CommitListener() {
        public void onCommit(datechooser.events.CommitEvent evt) {
            byDateOnCommit(evt);
        }
    });

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jScrollPane1)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(dateR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(nameR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(byName)
                        .addComponent(byDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
        jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(nameR)
                .addComponent(byName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(dateR)
                .addComponent(byDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/help.png"))); // NOI18N
    jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jLabel1MouseClicked(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addComponent(jLabel1)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(logo, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(home, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(reserveAsResident, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(logo)
                .addComponent(home)
                .addComponent(jLabel1))
            .addGap(18, 18, 18)
            .addComponent(reserveAsResident)
            .addGap(18, 18, 18)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void reserveAsResidentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reserveAsResidentMouseClicked
        this.dispose();
        new Reservation_Tenant(client, user, null,"reservation").setVisible(true);
    }//GEN-LAST:event_reserveAsResidentMouseClicked

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        this.dispose();
        new Main(client, user).setVisible(true);
    }//GEN-LAST:event_homeMouseClicked

    private void reservationTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reservationTableMouseReleased
        if (evt.isPopupTrigger()) {
            javax.swing.JTable source = (javax.swing.JTable) evt.getSource();
            row = source.rowAtPoint(evt.getPoint());
            column = source.columnAtPoint(evt.getPoint());
            if (!source.isRowSelected(row)) {
                source.changeSelection(row, column, false, false);
            }
            popUp.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_reservationTableMouseReleased

    private void RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterActionPerformed
        try {
            String selectedName = reservationTable.getValueAt(reservationTable.getSelectedRow(), 0).toString();
            String r = reservationTable.getValueAt(reservationTable.getSelectedRow(), 1).toString();
            new Registration_Tenant(client, client.getReservationId(selectedName,r), user).setVisible(true);
            this.dispose();
        } catch (RemoteException ex) {
            md.error(this, ex.getMessage());
//            Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_RegisterActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        if (md.confirmationCancel(this) == md.YES) {
            String selectedName = reservationTable.getValueAt(reservationTable.getSelectedRow(), 0).toString();
            String r = reservationTable.getValueAt(reservationTable.getSelectedRow(), 1).toString();
            try {
                if (client.updateRoomStatusFromReservation(selectedName)) {
                    if (client.updateReservationStatus(client.getReservationId(selectedName,r))) {
                        String[] name = selectedName.split(",");
                        md.successful(this);
                        setRow();
                    } else {
                        md.unsuccessful(this);
                    }
                } else {
                    md.unsuccessful(this);
                }
            } catch (RemoteException | ClassNotFoundException | SQLException | ParseException ex) {
                md.error(this, ex.getMessage());
//                Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_CancelActionPerformed

    private void byNameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_byNameCaretUpdate
        try {
            if (byName.getText().length() > 0) {
                tableModel.getDataVector().removeAllElements();
                tableModel.fireTableDataChanged();
                reservationInfo = client.getAllReservationForSearchByName(byName.getText().trim());
                for (ReservationImpl info : reservationInfo) {
                    tableModel.addRow(new Object[]{
                        info.getFullName(),
                        info.getRoom(),
                        info.getDatePaid()
                    });
                }
                reservationTable.setModel(tableModel);
            } else {
                setRow();
            }
        } catch (RemoteException | ClassNotFoundException | SQLException | ParseException ex) {
            md.error(this, ex.getMessage());
//            Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_byNameCaretUpdate

    private void byDateOnCommit(datechooser.events.CommitEvent evt) {//GEN-FIRST:event_byDateOnCommit
        try {
            originalFormat = byDate.getDateFormat();
            targetFormat = new SimpleDateFormat("yyyy-MM-dd");
            utilDate = originalFormat.parse(byDate.getText());
            formattedDate = targetFormat.format(utilDate);
            
            utilDate = targetFormat.parse(formattedDate);
            sDate = new java.sql.Date(utilDate.getTime());
            nDate = targetFormat.format(sDate);

            tableModel.getDataVector().removeAllElements();
            tableModel.fireTableDataChanged();
            reservationInfo = client.getAllReservationForSearchByDate(nDate);
            for (ReservationImpl info : reservationInfo) {
                tableModel.addRow(new Object[]{
                    info.getFullName(),
                    info.getRoom(),
                    info.getDatePaid()
                });
            }
            reservationTable.setModel(tableModel);
        } catch (ParseException | RemoteException ex) {
            md.error(this, ex.getMessage());
//            Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_byDateOnCommit

    private void dateRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateRMouseClicked
        if (dateR.isSelected()) {
            byName.setEnabled(false);
            byDate.setEnabled(true);
        }
    }//GEN-LAST:event_dateRMouseClicked

    private void nameRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameRMouseClicked
        if (nameR.isSelected()) {
            byName.setEnabled(true);
            byDate.setEnabled(false);
        }
    }//GEN-LAST:event_nameRMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        try {
            String path = "";
            BufferedReader br = new BufferedReader(new FileReader("dir\\docs.txt"));
            try {
                StringBuilder sb = new StringBuilder();
                String line = br.readLine();

                while (line != null) {
                    sb.append(line);
                    sb.append(System.lineSeparator());
                    line = br.readLine();
                }
                path = sb.toString().trim();
            } catch (IOException ex) {
//                Logger.getLogger(AdminArchiveFrame.class.getName()).log(Level.SEVERE, null, ex);
                new MessageDialog().error(this, ex.getMessage());
            } finally {
                br.close();
            }
            Desktop.getDesktop().browse(new File(path).toURI());
        } catch (IOException ex) {
            md.error(this, ex.getMessage());
//            Logger.getLogger(Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reservation.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Reservation(null,null).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Cancel;
    private javax.swing.JMenuItem Register;
    private datechooser.beans.DateChooserCombo byDate;
    private javax.swing.JTextField byName;
    private javax.swing.JRadioButton dateR;
    private javax.swing.JLabel home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel logo;
    private javax.swing.JRadioButton nameR;
    private javax.swing.JPopupMenu popUp;
    private javax.swing.JTable reservationTable;
    private javax.swing.JLabel reserveAsResident;
    private javax.swing.ButtonGroup searchGroup;
    // End of variables declaration//GEN-END:variables
}
