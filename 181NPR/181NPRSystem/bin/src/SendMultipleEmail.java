
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Kenneth
 */
public class SendMultipleEmail extends javax.swing.JDialog {

    /**
     * Creates new form SendMultipleEmail
     */
    private int row = -1;
    private int column = -1;
    private String tmpl = "";
    private int charCount = 0;
    private boolean isSecond = false;
    private final NPRInterface client;
    private final ArrayList<LogsImpl> id;
    private final DefaultTableModel model;
    private boolean isClicked = false;
    private boolean isPressed = false;
    private final java.awt.Frame parent;
    private final String table;
    private MessageTemplate mt;
    
    public SendMultipleEmail(java.awt.Frame parent, boolean modal, NPRInterface client, ArrayList<LogsImpl> id, String table) {
        super(parent, modal);
        initComponents();
        this.parent = parent;
        popUp.add(changeEmail);
        popUp.add(remove);
        model = (DefaultTableModel) tableList.getModel();
        this.client = client;
        this.id = id;
        this.table = table;
        tableList.getTableHeader().setReorderingAllowed(Boolean.FALSE);
        if(table.equals("resident")){
            for(LogsImpl thisId : this.id){
                model.addRow(new Object[]{
                    thisId.getId(), 
                    thisId.getFullName(),
                    updateRecipient(thisId.getId())
                });
            }
        } else {
            for(LogsImpl thisId : this.id){
                model.addRow(new Object[]{
                    getReservationOrTransient(thisId.getFullName()),
                    thisId.getFullName(),
                    updateRecipient(getReservationOrTransient(thisId.getFullName()))
                });
            }
        }
        try {
            mt = client.getMessageTemplates();
        } catch (RemoteException ex) {
//            Logger.getLogger(SendMultipleEmail.class.getName()).log(Level.SEVERE, null, ex);
            new MessageDialog().error(null, ex.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popUp = new javax.swing.JPopupMenu();
        changeEmail = new javax.swing.JMenuItem();
        remove = new javax.swing.JMenuItem();
        email = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableList = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        template = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        msg = new javax.swing.JTextArea();
        send = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        subject = new javax.swing.JTextField();
        progressBar = new javax.swing.JProgressBar();

        changeEmail.setText("Change Email");
        changeEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeEmailActionPerformed(evt);
            }
        });

        remove.setText("Remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Rondalo", 1, 18)); // NOI18N
        jLabel1.setText("Send Email");

        tableList.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N
        tableList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Email"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableList.setRowSelectionAllowed(false);
        tableList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableListMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tableListMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableListMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableList);
        if (tableList.getColumnModel().getColumnCount() > 0) {
            tableList.getColumnModel().getColumn(0).setResizable(false);
            tableList.getColumnModel().getColumn(1).setResizable(false);
            tableList.getColumnModel().getColumn(1).setPreferredWidth(200);
            tableList.getColumnModel().getColumn(2).setPreferredWidth(150);
        }

        jLabel2.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N
        jLabel2.setText("Template");

        template.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N
        template.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Optional--", "7th Day of Reservation", "11th Day of Reservation", "Successful Registration", "Visitor", "Payment Due Date", "Balance", "New Roommate", "Curfew" }));
        template.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        template.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                templateItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N
        jLabel3.setText("Message");

        msg.setColumns(20);
        msg.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N
        msg.setLineWrap(true);
        msg.setRows(5);
        msg.setWrapStyleWord(true);
        jScrollPane2.setViewportView(msg);

        send.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N
        send.setText("SEND");
        send.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N
        jButton2.setText("BACK");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N
        jLabel4.setText("Subject");

        subject.setFont(new java.awt.Font("Rondalo", 0, 14)); // NOI18N

        progressBar.setStringPainted(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 570, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(32, 32, 32)
                        .addComponent(subject))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(progressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(template, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(subject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(template, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(send)
                    .addComponent(jButton2)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void templateItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_templateItemStateChanged
        // TODO add your handling code here:
        switch(template.getSelectedIndex()){
            case 0:
                tmpl = "";
                break;
            case 1:
                tmpl = mt.getReservationSeventh();
                break;
            case 2:
                tmpl = mt.getReservationThird();
                break;
            case 3:
                tmpl = mt.getRegistration();
                break;
            case 4:
                tmpl = mt.getVisitor();
                break;
            case 5:
                tmpl = mt.getDueDate();
                break;
            case 6:
                tmpl = mt.getBalance();
                break;
            case 7:
                tmpl = mt.getNewRoommate();
                break;
            case 8:
                if(isSecond){
                    openSendNotif();
                    isSecond = false;
                } else {
                    isSecond = true;
                }//"We would like to inform you that " + recipient.getText() + " is not yet in our dormitory and has already reached beyond curfew hour."
                tmpl = mt.getCurfewViolation();
                break;
        }
        msg.setText(tmpl);
    }//GEN-LAST:event_templateItemStateChanged

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void changeEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeEmailActionPerformed
        // TODO add your handling code here:
        if(model.getValueAt(row, 2) != null){
            email.setText(model.getValueAt(row, 2).toString());
        }
        new SendNotifLogs(parent,true,email,client,model.getValueAt(row, 0).toString(),"EMAIL",table).setVisible(true);
        model.setValueAt(email.getText(), row, 2);
    }//GEN-LAST:event_changeEmailActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
        model.removeRow(row);
    }//GEN-LAST:event_removeActionPerformed

    private void tableListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListMouseClicked
        // TODO add your handling code here:
        isClicked = true;
    }//GEN-LAST:event_tableListMouseClicked

    private void tableListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListMousePressed
        // TODO add your handling code here:
        isPressed = true;
    }//GEN-LAST:event_tableListMousePressed

    private void tableListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableListMouseReleased
        // TODO add your handling code here:
        if(isClicked && isPressed){
            if(evt.isPopupTrigger()){
                javax.swing.JTable source = (javax.swing.JTable) evt.getSource();
                row = source.rowAtPoint(evt.getPoint());
                column = source.columnAtPoint(evt.getPoint());
                if(! source.isRowSelected(row)){
                    source.changeSelection(row, column, false, false);
                }
                popUp.show(evt.getComponent(), evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_tableListMouseReleased

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {

            @Override
            public void run() {
                send.setEnabled(false);
            }
        });
        try {
            int numberOfUnsentMails = 0;
            boolean unsentMails = false;
            for(int i = 0; i < model.getRowCount(); i++){
                ArrayList<String> desc = new ArrayList<>();
                desc.add(model.getValueAt(i, 2).toString());
                desc.add(subject.getText());
                String type;
                String message = msg.getText();
                switch(template.getSelectedItem().toString()){
                    case "7th Day of Reservation":
                    case "11th Day of Reservation":
                        type = "Reservation";
                        break;
                    case "Successful Registration":
                        type = "Registration";
                        break;
                    case "Visitor":
                        type = "Visitor";
                        break;
                    case "Payment Due Date":
                        type = "Due";
                        break;
                    case "Balance":
                        type = "Balance";
                        break;
                    case "New Roommate":
                        type = "Roommate";
                        break;
                    case "Curfew":
                        message = message.replace("<name>", model.getValueAt(i, 1).toString());
                        type = "Curfew";
                        break;
                    default:
                        type = "others";
                }
                desc.add(message);
                desc.add(type);
                desc.add(model.getValueAt(i, 0).toString());
                desc.add(table);
                if(client.sendEmail(desc)){
                    progressBar.setValue(progressBar.getValue() + (100/model.getRowCount()));
                    progressBar.setString(progressBar.getValue()+"");
                    progressBar.update(progressBar.getGraphics());
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(SendMultipleEmail.class.getName()).log(Level.SEVERE, null, ex);
                    }
                } else {
                    unsentMails = true;
                    numberOfUnsentMails++;
                }
            }
            new MessageDialog().sentEmails((JFrame) parent, model.getRowCount()-numberOfUnsentMails, numberOfUnsentMails);
        } catch (RemoteException ex) {
//            Logger.getLogger(SendMultipleEmail.class.getName()).log(Level.SEVERE, null, ex);
            new MessageDialog().error(null, ex.getMessage());
        }
        send.setEnabled(true);
    }//GEN-LAST:event_sendActionPerformed

    private String updateRecipient(String idNumber){
        try {
            if(table.equals("resident")){
                return client.getEmail(idNumber).getResidentContact();
            } else {
                return client.getEmailTransientOrReservation(idNumber, table);
            }
        } catch (RemoteException ex) {
//            Logger.getLogger(SendMessage.class.getName()).log(Level.SEVERE, null, ex);
            new MessageDialog().error(null, ex.getMessage());
        }
        return "";
    }
    
    public String getReservationOrTransient(String name){
        try {
            if(table.equals("reservation")){
                return client.getReservationId(name);
            } else {
                return client.getTransientId(name);
            }
        } catch (RemoteException ex) {
//            Logger.getLogger(SendMultipleEmail.class.getName()).log(Level.SEVERE, null, ex);
            new MessageDialog().error(null, ex.getMessage());
        }
        return "";
    }
    
    public void openSendNotif(){
        
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SendMultipleEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SendMultipleEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SendMultipleEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SendMultipleEmail.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                SendMultipleEmail dialog = new SendMultipleEmail(new javax.swing.JFrame(), true,null,null,null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem changeEmail;
    private javax.swing.JTextField email;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea msg;
    private javax.swing.JPopupMenu popUp;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JMenuItem remove;
    private javax.swing.JButton send;
    private javax.swing.JTextField subject;
    private javax.swing.JTable tableList;
    private javax.swing.JComboBox template;
    // End of variables declaration//GEN-END:variables
}
